"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5683],{3905:function(t,e,r){r.d(e,{Zo:function(){return u},kt:function(){return d}});var i=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,i)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,i,n=function(t,e){if(null==t)return{};var r,i,n={},a=Object.keys(t);for(i=0;i<a.length;i++)r=a[i],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(i=0;i<a.length;i++)r=a[i],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var l=i.createContext({}),c=function(t){var e=i.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},u=function(t){var e=c(t.components);return i.createElement(l.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},p=i.forwardRef((function(t,e){var r=t.components,n=t.mdxType,a=t.originalType,l=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),p=c(r),d=n,y=p["".concat(l,".").concat(d)]||p[d]||m[d]||a;return r?i.createElement(y,o(o({ref:e},u),{},{components:r})):i.createElement(y,o({ref:e},u))}));function d(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var a=r.length,o=new Array(a);o[0]=p;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:n,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1126:function(t,e,r){r.r(e),r.d(e,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var i=r(7462),n=r(3366),a=(r(7294),r(3905)),o=["components"],s={title:"Dynamic bitmaps",author:"Krzysztof Krysi\u0144ski",author_title:"PixiEditor Creator",author_url:"https://krysinski.me",author_image_url:"https://avatars.githubusercontent.com/u/25402427?s=400&v=4",tags:["code","solution"],keywords:["bitmap","dynamic","data-structure","image","optimization"],description:"Dynamic bitmap is a solution which made PixiEditor work multiple times faster, decreased RAM usage 10 times, and solved memory leak problems.  This article will explain what it is and how it works."},l=void 0,c={permalink:"/blog/2021/07/22/dynamic-bitmaps",source:"@site/blog/2021-07-22-dynamic-bitmaps.mdx",title:"Dynamic bitmaps",description:"Dynamic bitmap is a solution which made PixiEditor work multiple times faster, decreased RAM usage 10 times, and solved memory leak problems.  This article will explain what it is and how it works.",date:"2021-07-22T00:00:00.000Z",formattedDate:"July 22, 2021",tags:[{label:"code",permalink:"/blog/tags/code"},{label:"solution",permalink:"/blog/tags/solution"}],readingTime:5.39,truncated:!0,authors:[{name:"Krzysztof Krysi\u0144ski",title:"PixiEditor Creator",url:"https://krysinski.me",imageURL:"https://avatars.githubusercontent.com/u/25402427?s=400&v=4"}],frontMatter:{title:"Dynamic bitmaps",author:"Krzysztof Krysi\u0144ski",author_title:"PixiEditor Creator",author_url:"https://krysinski.me",author_image_url:"https://avatars.githubusercontent.com/u/25402427?s=400&v=4",tags:["code","solution"],keywords:["bitmap","dynamic","data-structure","image","optimization"],description:"Dynamic bitmap is a solution which made PixiEditor work multiple times faster, decreased RAM usage 10 times, and solved memory leak problems.  This article will explain what it is and how it works."},prevItem:{title:"How to write a Todo list app in 10 lines of code in pure C# [no dependencies]",permalink:"/blog/2021/08/06/todo-csharp"},nextItem:{title:"Launching PixiEditor.net",permalink:"/blog/2021/06/06/pixieditor-net-launch"}},u={authorsImageUrls:[void 0]},m=[],p={toc:m};function d(t){var e=t.components,r=(0,n.Z)(t,o);return(0,a.kt)("wrapper",(0,i.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Dynamic bitmaps are a solution that made PixiEditor work multiple times faster, decreased RAM usage by about 10 times and solved memory leak problems.\nThis article will explain what dynamic bitmaps are and how they work."))}d.isMDXComponent=!0}}]);