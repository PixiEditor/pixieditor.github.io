"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5378],{248:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var n=t(5893),o=t(1151);const r={id:"start-here",title:"Start here",sidebar_label:"Start here"},s="Contributing to PixiEditor",a={id:"start-here",title:"Start here",description:"Docs are still work in progress and lots of information are missing. Join our Discord server to get help.",source:"@site/../docs/StartHere.mdx",sourceDirName:".",slug:"/start-here",permalink:"/docs/start-here",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"start-here",title:"Start here",sidebar_label:"Start here"},sidebar:"docs",previous:{title:"Shortcuts",permalink:"/docs/shortcuts"},next:{title:"Codebase overview",permalink:"/docs/codebase-overview"}},c={},d=[{value:"Before you start",id:"before-you-start",level:2},{value:"The basics",id:"the-basics",level:2},{value:"Code main points",id:"code-main-points",level:2},{value:"<code>PixiEditor</code> project (the GUI)",id:"pixieditor-project-the-gui",level:3},{value:"<code>PixiEditor.ChangeableDocument</code> project (the Core)",id:"pixieditorchangeabledocument-project-the-core",level:3}];function l(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsxs)(i.p,{children:["Docs are still work in progress and lots of information are missing. Join our ",(0,n.jsx)(i.a,{href:"https://discord.com/invite/qSRMYmq",children:"Discord server"})," to get help."]})}),"\n",(0,n.jsx)(i.h1,{id:"contributing-to-pixieditor",children:"Contributing to PixiEditor"}),"\n",(0,n.jsx)(i.p,{children:"Hey! Thanks for being interested in the project! It means a lot. This guide will help you get familiar with the codebase."}),"\n",(0,n.jsx)(i.h2,{id:"before-you-start",children:"Before you start"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Before you start writing code, it's best to discuss the changes you want to make.\r\nThe quickest way to talk with us is on our ",(0,n.jsx)(i.a,{href:"https://discord.com/invite/qSRMYmq",children:"discord server"}),".\r\nYou can also make an issue or comment on an existing one.\r\nIf you want to work on an issue, keep in mind that some issues can be unexpectedly difficult, and some may even be invalid (since anyone can make one)."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"We welcome early pull requests, in fact, you can and should make one before writing any code.\r\nThis tells everyone what you are working on, and this way you'll be able to get feedback as you are writing code."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"the-basics",children:"The basics"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"PixiEditor is written in C#, .NET 7"}),"\n",(0,n.jsx)(i.li,{children:"We use WPF framework for the UI and SkiaSharp for everything related to drawing/painting."}),"\n",(0,n.jsxs)(i.li,{children:["The app has two general parts","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"A GUI built in WPF (with plans to eventually switch to AvaloniaUI or other UI framework)"}),"\n",(0,n.jsx)(i.li,{children:"The PixiEditor's Core, the part that implements most of the functionality, like drawing, handling layers, keeping track of the changes for the undo system, etc."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"code-main-points",children:"Code main points"}),"\n",(0,n.jsxs)(i.h3,{id:"pixieditor-project-the-gui",children:[(0,n.jsx)(i.code,{children:"PixiEditor"})," project (the GUI)"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["The constructor of ",(0,n.jsx)(i.a,{href:"https://github.com/PixiEditor/PixiEditor/blob/1c3cb41a35f1bab03e5613b9383b3a5da81330ab/src/PixiEditor/Views/MainWindow.xaml",children:"MainWindow"})," is considered to be the entry point of program."]}),"\n",(0,n.jsxs)(i.li,{children:["Part of the initialization also happens in ",(0,n.jsx)(i.a,{href:"https://github.com/PixiEditor/PixiEditor/blob/1c3cb41a35f1bab03e5613b9383b3a5da81330ab/src/PixiEditor/ViewModels/ViewModelMain.cs",children:"ViewModelMain"}),", which is the ",(0,n.jsx)(i.code,{children:"DataContext"})," of ",(0,n.jsx)(i.code,{children:"MainWindow"})]}),"\n",(0,n.jsxs)(i.li,{children:["The outside look and layout of PixiEditor's GUI is defined in .xaml files, located in the ",(0,n.jsx)(i.a,{href:"https://github.com/PixiEditor/PixiEditor/tree/master/src/PixiEditor/Views",children:"Views directory"})]}),"\n",(0,n.jsxs)(i.li,{children:["The C# code that backs the GUI is mostly located in the ",(0,n.jsx)(i.a,{href:"https://github.com/PixiEditor/PixiEditor/tree/master/src/PixiEditor/ViewModels",children:"ViewModels directory"})]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.a,{href:"https://github.com/PixiEditor/PixiEditor/blob/1c3cb41a35f1bab03e5613b9383b3a5da81330ab/src/PixiEditor/Models/DocumentModels/ActionAccumulator.cs",children:"ActionAccumulator"})," is the main class that ties the GUI with the Core."]}),"\n"]}),"\n",(0,n.jsxs)(i.h3,{id:"pixieditorchangeabledocument-project-the-core",children:[(0,n.jsx)(i.code,{children:"PixiEditor.ChangeableDocument"})," project (the Core)"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["The ",(0,n.jsx)(i.a,{href:"https://github.com/PixiEditor/PixiEditor/tree/master/src/PixiEditor.ChangeableDocument/Changes",children:"Changes"})," directory contains all the code used for\r\nactions that change the content of the document, specifically the ones that you can undo and redo.\r\nExamples include: Drawing, Creating and deleting layers, Changing canvas size, Selecting pixels with the magic wand tool, etc."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>a,a:()=>s});var n=t(7294);const o={},r=n.createContext(o);function s(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);