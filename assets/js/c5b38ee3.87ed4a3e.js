"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4204],{7415:(o,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>b,frontMatter:()=>n,metadata:()=>r,toc:()=>c});var i=t(5893),s=t(1151);const n={id:"toolbars",title:"Toolbars",sidebar_label:"Toolbars"},l="What is a toolbar?",r={id:"toolbars",title:"Toolbars",description:"Some information on this page is outdated. Docs are work in progress.",source:"@site/../docs/Toolbars.mdx",sourceDirName:".",slug:"/toolbars",permalink:"/docs/toolbars",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"toolbars",title:"Toolbars",sidebar_label:"Toolbars"},sidebar:"docs",previous:{title:"How the pen tool works",permalink:"/docs/change-walkthrough"},next:{title:"Toolbar Settings",permalink:"/docs/toolbar-settings"}},a={},c=[];function d(o){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",img:"img",p:"p",pre:"pre",...(0,s.a)(),...o.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.admonition,{type:"caution",children:(0,i.jsx)(e.p,{children:"Some information on this page is outdated. Docs are work in progress."})}),"\n",(0,i.jsx)(e.h1,{id:"what-is-a-toolbar",children:"What is a toolbar?"}),"\n",(0,i.jsx)(e.p,{children:"The toolbar is a set of settings for individual tools. An example toolbar for Shape Tool consists of Tool size integer, Fill shape boolean, and fill color."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:"https://user-images.githubusercontent.com/25402427/92022526-aee0db00-ed5b-11ea-8371-b602ba376aac.png",alt:"image"})}),"\n",(0,i.jsx)(e.h1,{id:"how-toolbars-work",children:"How toolbars work"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"https://github.com/PixiEditor/PixiEditor/blob/1c3cb41a35f1bab03e5613b9383b3a5da81330ab/src/PixiEditor/ViewModels/SubViewModels/Tools/ToolSettings/Toolbars/Toolbar.cs",children:(0,i.jsx)(e.code,{children:"Toolbar"})})," is an abstract wrapper class for List of ",(0,i.jsx)(e.a,{href:"https://github.com/PixiEditor/PixiEditor/blob/1c3cb41a35f1bab03e5613b9383b3a5da81330ab/src/PixiEditor/ViewModels/SubViewModels/Tools/ToolSettings/Settings/Setting.cs",children:(0,i.jsx)(e.code,{children:"Settings"})}),", that allows easy access and settings sharing."]}),"\n",(0,i.jsxs)(e.p,{children:["If several tools contain the same setting (same Setting Names), the toolbar will save and restore them on tool change. For example, if you change tool size in ",(0,i.jsx)(e.code,{children:"Pen Tool"})," to 5px and then select ",(0,i.jsx)(e.code,{children:"Line Tool"}),", the toolbar will still contain the same 5px tool size."]}),"\n",(0,i.jsx)(e.h1,{id:"accessing-settings",children:"Accessing settings"}),"\n",(0,i.jsxs)(e.p,{children:["To get a setting, use the ",(0,i.jsx)(e.code,{children:"GetSetting"})," method, for example:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:'var toolbar = new BasicToolbar(); // Basic Toolbar contains only ToolSize setting\r\nSetting toolSizeSetting = toolbar.GetSetting("ToolSize");\n'})}),"\n",(0,i.jsx)(e.h1,{id:"creating-toolbars",children:"Creating toolbars"}),"\n",(0,i.jsxs)(e.p,{children:["Creating toolbars is very easy, you just need to inherit from any ",(0,i.jsx)(e.a,{href:"https://github.com/PixiEditor/PixiEditor/blob/1c3cb41a35f1bab03e5613b9383b3a5da81330ab/src/PixiEditor/ViewModels/SubViewModels/Tools/ToolSettings/Toolbars/Toolbar.cs",children:(0,i.jsx)(e.code,{children:"Toolbar"})})," class. Then initialize your settings in the constructor."]}),"\n",(0,i.jsx)(e.p,{children:"Example Toolbar:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:'public class BasicShapeToolbar : BasicToolbar\r\n    {\r\n        public bool Fill => GetSetting<BoolSetting>(nameof(Fill)).Value;\r\n        public Color FillColor => GetSetting<ColorSetting>(nameof(FillColor)).Value;\r\n\r\n        //This Toolbar will contain 3 settings, ToolSize from BasicToolbar, Fill and FillColor\r\n        public BasicShapeToolbar()\r\n        {\r\n            Settings.Add(new BoolSetting("Fill", "Fill shape: "));\r\n            Settings.Add(new ColorSetting("FillColor", "Fill color"));\r\n        }\r\n    }\n'})}),"\n",(0,i.jsx)(e.h1,{id:"applying-toolbar-to-tool",children:"Applying Toolbar to Tool"}),"\n",(0,i.jsxs)(e.p,{children:["To associate any Toolbar with the tool, assign ",(0,i.jsx)(e.code,{children:"Toolbar"})," variable in the Tool constructor"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:"public class ExampleToolViewModel : ToolViewModel\r\n{\r\n    public ExampleToolViewModel()\r\n    {\r\n        Toolbar = ToolbarFactory.Create<ExampleToolViewModel, ExampleToolbar>();\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(e.h1,{id:"settings",children:"Settings"}),"\n",(0,i.jsxs)(e.p,{children:["To learn about Settings, check out ",(0,i.jsx)(e.a,{href:"Toolbar-Settings",children:"this guide"})]}),"\n",(0,i.jsxs)(e.p,{children:["All available toolbars can be found in ",(0,i.jsx)(e.a,{href:"https://github.com/PixiEditor/PixiEditor/tree/master/src/PixiEditor/ViewModels/SubViewModels/Tools/ToolSettings/Toolbars",children:"PixiEditor.Models.Tools.ToolSettings.Toolbars namespace"})]})]})}function b(o={}){const{wrapper:e}={...(0,s.a)(),...o.components};return e?(0,i.jsx)(e,{...o,children:(0,i.jsx)(d,{...o})}):d(o)}},1151:(o,e,t)=>{t.d(e,{Z:()=>r,a:()=>l});var i=t(7294);const s={},n=i.createContext(s);function l(o){const e=i.useContext(n);return i.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function r(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(s):o.components||s:l(o.components),i.createElement(n.Provider,{value:e},o.children)}}}]);