"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4204],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>g});var a=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,a,r=function(e,t){if(null==e)return{};var o,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},b="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var o=e.components,r=e.mdxType,n=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),b=c(o),u=r,g=b["".concat(s,".").concat(u)]||b[u]||d[u]||n;return o?a.createElement(g,l(l({ref:t},p),{},{components:o})):a.createElement(g,l({ref:t},p))}));function g(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=o.length,l=new Array(n);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[b]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<n;c++)l[c]=o[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,o)}u.displayName="MDXCreateElement"},1725:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>b});var a=o(7462),r=o(3366),n=(o(7294),o(3905)),l=["components"],i={id:"toolbars",title:"Toolbars",sidebar_label:"Toolbars"},s=void 0,c={unversionedId:"toolbars",id:"toolbars",title:"Toolbars",description:"Some information on this page is outdated. Docs are work in progress.",source:"@site/../docs/Toolbars.mdx",sourceDirName:".",slug:"/toolbars",permalink:"/docs/toolbars",draft:!1,tags:[],version:"current",frontMatter:{id:"toolbars",title:"Toolbars",sidebar_label:"Toolbars"},sidebar:"docs",previous:{title:"How the pen tool works",permalink:"/docs/change-walkthrough"},next:{title:"Toolbar Settings",permalink:"/docs/toolbar-settings"}},p={},b=[],d={toc:b},u="wrapper";function g(e){var t=e.components,o=(0,r.Z)(e,l);return(0,n.kt)(u,(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Some information on this page is outdated. Docs are work in progress.")),(0,n.kt)("h1",{id:"what-is-a-toolbar"},"What is a toolbar?"),(0,n.kt)("p",null,"The toolbar is a set of settings for individual tools. An example toolbar for Shape Tool consists of Tool size integer, Fill shape boolean, and fill color."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/25402427/92022526-aee0db00-ed5b-11ea-8371-b602ba376aac.png",alt:"image"})),(0,n.kt)("h1",{id:"how-toolbars-work"},"How toolbars work"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/PixiEditor/PixiEditor/blob/1c3cb41a35f1bab03e5613b9383b3a5da81330ab/src/PixiEditor/ViewModels/SubViewModels/Tools/ToolSettings/Toolbars/Toolbar.cs"},(0,n.kt)("inlineCode",{parentName:"a"},"Toolbar"))," is an abstract wrapper class for List of ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/PixiEditor/PixiEditor/blob/1c3cb41a35f1bab03e5613b9383b3a5da81330ab/src/PixiEditor/ViewModels/SubViewModels/Tools/ToolSettings/Settings/Setting.cs"},(0,n.kt)("inlineCode",{parentName:"a"},"Settings")),", that allows easy access and settings sharing."),(0,n.kt)("p",null,"If several tools contain the same setting (same Setting Names), the toolbar will save and restore them on tool change. For example, if you change tool size in ",(0,n.kt)("inlineCode",{parentName:"p"},"Pen Tool")," to 5px and then select ",(0,n.kt)("inlineCode",{parentName:"p"},"Line Tool"),", the toolbar will still contain the same 5px tool size."),(0,n.kt)("h1",{id:"accessing-settings"},"Accessing settings"),(0,n.kt)("p",null,"To get a setting, use the ",(0,n.kt)("inlineCode",{parentName:"p"},"GetSetting")," method, for example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'var toolbar = new BasicToolbar(); // Basic Toolbar contains only ToolSize setting\nSetting toolSizeSetting = toolbar.GetSetting("ToolSize");\n')),(0,n.kt)("h1",{id:"creating-toolbars"},"Creating toolbars"),(0,n.kt)("p",null,"Creating toolbars is very easy, you just need to inherit from any ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/PixiEditor/PixiEditor/blob/1c3cb41a35f1bab03e5613b9383b3a5da81330ab/src/PixiEditor/ViewModels/SubViewModels/Tools/ToolSettings/Toolbars/Toolbar.cs"},(0,n.kt)("inlineCode",{parentName:"a"},"Toolbar"))," class. Then initialize your settings in the constructor."),(0,n.kt)("p",null,"Example Toolbar: "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'public class BasicShapeToolbar : BasicToolbar\n    {\n        public bool Fill => GetSetting<BoolSetting>(nameof(Fill)).Value;\n        public Color FillColor => GetSetting<ColorSetting>(nameof(FillColor)).Value;\n\n        //This Toolbar will contain 3 settings, ToolSize from BasicToolbar, Fill and FillColor\n        public BasicShapeToolbar()\n        {\n            Settings.Add(new BoolSetting("Fill", "Fill shape: "));\n            Settings.Add(new ColorSetting("FillColor", "Fill color"));\n        }\n    }\n')),(0,n.kt)("h1",{id:"applying-toolbar-to-tool"},"Applying Toolbar to Tool"),(0,n.kt)("p",null,"To associate any Toolbar with the tool, assign ",(0,n.kt)("inlineCode",{parentName:"p"},"Toolbar")," variable in the Tool constructor"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"public class ExampleToolViewModel : ToolViewModel\n{\n    public ExampleToolViewModel()\n    {\n        Toolbar = ToolbarFactory.Create<ExampleToolViewModel, ExampleToolbar>();\n    }\n}\n")),(0,n.kt)("h1",{id:"settings"},"Settings"),(0,n.kt)("p",null,"To learn about Settings, check out ",(0,n.kt)("a",{parentName:"p",href:"Toolbar-Settings"},"this guide")),(0,n.kt)("p",null,"All available toolbars can be found in ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/PixiEditor/PixiEditor/tree/master/src/PixiEditor/ViewModels/SubViewModels/Tools/ToolSettings/Toolbars"},"PixiEditor.Models.Tools.ToolSettings.Toolbars namespace")))}g.isMDXComponent=!0}}]);