(self.webpackChunk=self.webpackChunk||[]).push([[726],{3905:(e,t,r)=>{"use strict";r.d(t,{Zo:()=>s,kt:()=>k});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),p=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(r),k=n,m=d["".concat(c,".").concat(k)]||d[k]||u[k]||l;return r?o.createElement(m,a(a({ref:t},s),{},{components:r})):o.createElement(m,a({ref:t},s))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,a=new Array(l);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var p=2;p<l;p++)a[p]=r[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5204:(e,t,r)=>{"use strict";r.r(t),r.d(t,{frontMatter:()=>i,metadata:()=>c,toc:()=>p,default:()=>u});var o=r(2122),n=r(9756),l=(r(7294),r(3905)),a=["components"],i={id:"color-picker",title:"Color Picker Control",sidebar_label:"Color Picker Control"},c={unversionedId:"color-picker",id:"color-picker",isDocsHomePage:!1,title:"About",description:"A collection of WPF controls that let users choose colors in various ways.",source:"@site/../docs/ColorPicker.mdx",sourceDirName:".",slug:"/color-picker",permalink:"/docs/color-picker",version:"current",sidebar_label:"Color Picker Control",frontMatter:{id:"color-picker",title:"Color Picker Control",sidebar_label:"Color Picker Control"},sidebar:"docs",previous:{title:"About",permalink:"/docs/undo-manager"},next:{title:"FAQ (Frequently Asked Questions)",permalink:"/docs/faq"}},p=[],s={toc:p};function u(e){var t=e.components,r=(0,n.Z)(e,a);return(0,l.kt)("wrapper",(0,o.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A collection of WPF controls that let users choose colors in various ways.\nOriginally developed for ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/PixiEditor/PixiEditor"},"PixiEditor"),".\nSupports .NET Framework 4.5+, .NET Core 3.1+, and .NET 5"),(0,l.kt)("img",{src:"https://i.imgur.com/RGdN0GY.png",style:{border:"1px solid black",borderRadius:10}}),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#controls"},"Included Controls")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#example"},"Example Usage")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#properties"},"Properties")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#styling"},"Styling")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#other"},"Other"))),(0,l.kt)("h1",{id:"included-controls"},"Included Controls",(0,l.kt)("a",{name:"controls"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SquarePicker"),": A HSV/HSL Color Picker, consists of a circular hue slider and HV/HL square."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ColorSliders"),": A set of HSV/RGB + Alpha sliders"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"HexColorTextBox"),": An RGBA Hex text field"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ColorDisplay"),": A Primary/Secondary Color display with a swap button"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"StandardColorPicker"),": Combines everything listed above in one control"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PortableColorPicker"),": A collapsible version of StandardColorPicker"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AlphaSlider"),": A separate alpha slider control")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://i.imgur.com/k5kszWC.png",alt:"demo project"})),(0,l.kt)("h1",{id:"example-usage"},"Example Usage",(0,l.kt)("a",{name:"example"})),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/PixiEditor/ColorPicker/tree/master/ColorPickerDemo"},"ColorPickerDemo")," for an example project."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Basic usage:")),(0,l.kt)("p",null,"Install the NuGet package, insert a reference to the ColorPicker namespace"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<Window ...\nxmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"\n...>\n')),(0,l.kt)("p",null,"Add the controls"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<colorpicker:StandardColorPicker x:Name="main" />\n<colorpicker:PortableColorPicker ColorState="{Binding ElementName=main, Path=ColorState, Mode=TwoWay}"/>\n')),(0,l.kt)("p",null,"Note: in some configurations such as using the package in .NET Framework 4.7 XAML designer breaks and doesn't show the control.\nIn my testing that did not affect the build process."),(0,l.kt)("h1",{id:"properties"},"Properties",(0,l.kt)("a",{name:"properties"})),(0,l.kt)("p",null,"All controls share these properties:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ColorState")," dependency property contains all info about the current state of the control. Use this property to bind controls together."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Color")," property contains nested properties you may bind to or use to retrieve the color in code-behind:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Color.A"),": Current Alpha, a double ranging from 0 to 255"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Color.RGB_R"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Color.RGB_G"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Color.RGB_B"),": Dimensions of the RGB color space, each is a 0-255 double"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Color.HSV_H"),": Hue in HSV color space, a 0-360 double "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Color.HSV_S"),": Saturation in HSV color space, a 0-100 double"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Color.HSV_V"),": Value in HSV color space, a 0-100 double"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SelectedColor")," dependency property stores the current color as System.Windows.Media.Color"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ColorChanged"),": An event that fires on SelectedColor change.")),(0,l.kt)("p",null,"Apart from those, some controls have unique properties:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SecondColorState"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"SecondColor"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"SecondaryColor")," are functionally identical to ",(0,l.kt)("inlineCode",{parentName:"li"},"ColorState"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Color"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"SelectedColor")," respectively.\nThose are present on controls that have a secondary color."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SmallChange")," lets you change ",(0,l.kt)("inlineCode",{parentName:"li"},"SmallChange")," of sliders, which is used as sensitivity for when the user\nturns the scroll wheel with the cursor over the sliders. Present on controls with sliders."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ShowAlpha")," lets you hide the alpha channel on various controls.\nPresent on all controls containing either an alpha slider (apart from the ",(0,l.kt)("inlineCode",{parentName:"li"},"AlphaSlider")," control itself) or a hex color textbox."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PickerType"),": HSV or HSL, present on ",(0,l.kt)("inlineCode",{parentName:"li"},"SquarePicker")," or controls that contain ",(0,l.kt)("inlineCode",{parentName:"li"},"SquarePicker"),".")),(0,l.kt)("h1",{id:"styling"},"Styling",(0,l.kt)("a",{name:"styling"})),(0,l.kt)("p",null,"Out of the box, the color picker uses the default WPF look:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://i.imgur.com/AyweTmS.png",alt:"Default ColorPicker look"})),(0,l.kt)("p",null,"You may use the included dark theme by loading a resource dictionary in XAML:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<Window.Resources>\n    <ResourceDictionary>\n        <ResourceDictionary.MergedDictionaries>\n            <ResourceDictionary Source="pack://application:,,,/ColorPicker;component/Styles/DefaultColorPickerStyle.xaml" />\n        </ResourceDictionary.MergedDictionaries>\n    </ResourceDictionary>\n</Window.Resources>\n')),(0,l.kt)("p",null,"and referencing DefaultColorPickerStyle in the style attribute of a control:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<colorpicker:StandardColorPicker Style="{StaticResource DefaultColorPickerStyle}" />\n')),(0,l.kt)("p",null,"As an alternative, the same can be achieved programmatically:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'var resourceDictionary = new ResourceDictionary();\nresourceDictionary.Source = new System.Uri(\n    "pack://application:,,,/ColorPicker;component/Styles/DefaultColorPickerStyle.xaml",\n    System.UriKind.RelativeOrAbsolute);\n\nStandardColorPicker picker = new StandardColorPicker()\n{\n    Style = (Style)resourceDictionary["DefaultColorPickerStyle"]\n};\n')),(0,l.kt)("p",null,"You may define your own styles, see\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/PixiEditor/ColorPicker/blob/master/src/ColorPicker/Styles/DefaultColorPickerStyle.xaml"},"DefaultColorPickerStyle"),"\nfor reference."),(0,l.kt)("h1",{id:"other"},"Other",(0,l.kt)("a",{name:"other"})),(0,l.kt)("p",null,"Read flabbet's article on the theory behind the first version of this project on ",(0,l.kt)("a",{parentName:"p",href:"https://dev.to/flabbet/how-does-color-pickers-work-1275"},"dev.to")))}u.isMDXComponent=!0}}]);